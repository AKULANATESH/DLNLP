{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOXNtkLWZQCj3vhrhMu45dZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"RgSjIVzCcKbc"},"outputs":[],"source":["import nltk"]},{"cell_type":"code","source":["text = \"Hi This is natesh from 7b8 Aritficial intellegence\"\n","tokens = text.split(\",\")\n","print(tokens)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iLTcmAJbcSM-","executionInfo":{"status":"ok","timestamp":1688013451763,"user_tz":-330,"elapsed":4,"user":{"displayName":"NATESH AKULA","userId":"12857073701592885262"}},"outputId":"a67642ba-12f0-4b85-82b4-ee32476030bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Hi This is natesh from 7b8 Aritficial intellegence']\n"]}]},{"cell_type":"code","source":[" import nltk\n"," from nltk.stem import PorterStemmer\n"," ps = PorterStemmer()\n"," sentence = \"This is natesh from 7b8 Aritficial intellegence\"\n"," for word in sentence.split():\n","  print(ps.stem(word))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VhoaXtFEcV2e","executionInfo":{"status":"ok","timestamp":1688013466844,"user_tz":-330,"elapsed":2,"user":{"displayName":"NATESH AKULA","userId":"12857073701592885262"}},"outputId":"e091b50f-cd9e-433b-d3fe-225c14efb406"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["thi\n","is\n","natesh\n","from\n","7b8\n","aritfici\n","intelleg\n"]}]},{"cell_type":"code","source":["import nltk\n","#import spacy\n","nltk.download('wordnet')\n","from nltk.stem import WordNetLemmatizer\n","lemmatizer = WordNetLemmatizer()\n","print(lemmatizer.lemmatize(\"Machine\", pos = 'n'))\n","#POS :PARTS OF SPEECH TAG, VERB\n","print(lemmatizer.lemmatize(\"caring\", pos = \"v\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9XR8LI_YcaK8","executionInfo":{"status":"ok","timestamp":1688013489261,"user_tz":-330,"elapsed":1502,"user":{"displayName":"NATESH AKULA","userId":"12857073701592885262"}},"outputId":"d6e4027b-1009-43cb-bd50-38f46e92b460"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package wordnet to /root/nltk_data...\n"]},{"output_type":"stream","name":"stdout","text":["Machine\n","care\n"]}]},{"cell_type":"code","source":["import nltk\n","from nltk.corpus import stopwords\n","nltk.download('stopwords')\n","print(stopwords.words('english'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EHn6loW-cemM","executionInfo":{"status":"ok","timestamp":1688013503072,"user_tz":-330,"elapsed":378,"user":{"displayName":"NATESH AKULA","userId":"12857073701592885262"}},"outputId":"253c2e4e-2ef3-481c-f709-b8b9c24c53f6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', \"you're\", \"you've\", \"you'll\", \"you'd\", 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', \"she's\", 'her', 'hers', 'herself', 'it', \"it's\", 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', \"that'll\", 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', \"don't\", 'should', \"should've\", 'now', 'd', 'll', 'm', 'o', 're', 've', 'y', 'ain', 'aren', \"aren't\", 'couldn', \"couldn't\", 'didn', \"didn't\", 'doesn', \"doesn't\", 'hadn', \"hadn't\", 'hasn', \"hasn't\", 'haven', \"haven't\", 'isn', \"isn't\", 'ma', 'mightn', \"mightn't\", 'mustn', \"mustn't\", 'needn', \"needn't\", 'shan', \"shan't\", 'shouldn', \"shouldn't\", 'wasn', \"wasn't\", 'weren', \"weren't\", 'won', \"won't\", 'wouldn', \"wouldn't\"]\n"]},{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"]}]}]}